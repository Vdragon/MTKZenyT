#!/bin/bash

function display_detected() {

    # call: display_detected mssg

    mssg=$(printf "$1\n" "$2");
    echo -e "${green}${mssg}${neutral}"

    write_file "log" "### Detected: ${mssg}"

}

function display_error() {

    # call: display_error mssg

    if [[ "${ZENITY}" -ne 0 ]]; then
        zenity_error "<span color=\"red\">$1</span>" "$2"
    else
        printf "${red}$1${neutral}" "$2"
    fi

    write_file "log" "### Error: $1"

}

function display_files() {

    write_file "log" "$now ### $FUNCNAME: attempt to display files for choosing..."

    if [[ "${ZENITY}" -eq 1 ]]; then

        files=$( echos_files | zenity_list_files "${text_menu_files}" "${title_menu_files}" "${#mtd_name[@]}")

    fi

    if [[ "${DIALOG}" -eq 1 ]]; then

        echos_files

        display_detected "files: $files"

    fi

    if [[ "${files}" ]]; then
        write_file "log" "### $FUNCNAME: Files choosed: ${files[*]}";
    fi

}

function display_menu() {

    write_file "log" "$now ### $FUNCNAME: attempt to display menu..."

    while true; do
        choice=""

        if [[ "${ZENITY}" -ne 0 ]]; then

            choice=$( echos_menu | zenity_list "${text_welcome}" "${title_welcome}" "${count['name']}")

        elif  [[ "${DIALOG}" -ne 0 ]]; then

            FILE_TMP="/tmp/MTK_Dialog_menu.tmp"
            touch "${FILE_TMP}"
            trap 'rm -f "${FILE_TMP}"' 0 1 2 3 5 15

            echos_menu
            dialog_menu "${text_welcome}" "${title_welcome}" "$(count ${text_menu_name[@]})"

            case $? in
                0) choice=$(<"${FILE_TMP}");;
                1|255)
                    if [[ -f "${FILE_TMP}_menu.tmp" ]]; then rm -f "${FILE_TMP}_menu.tmp"; fi
                    if [[ -f "${FILE_TMP}" ]]; then rm -f "${FILE_TMP}"; fi

                    choice=""; menu=""

                    display_menu

                ;;
            esac

            if [[ -f "${FILE_TMP}_menu.tmp" ]]; then rm -f "${FILE_TMP}_menu.tmp"; fi
            if [[ -f "${FILE_TMP}" ]]; then rm -f "${FILE_TMP}"; fi

            unset menu

        else

            printf "\n${title_menu}\n"

            PS3="${text_welcome} "
            select menu in "${text_menu_description[@]}"; do
                if [[ "$REPLY" == "q" || "$REPLY" == "Q" ]]; then
                    choice="${text_menu_name[${#text_menu_name[*]}]}"
                elif [[ -z "${text_menu_name[$REPLY]}" ]]; then
                    choice=""
                else
                    choice="${text_menu_name[$REPLY]}"
                fi
                break
            done

            unset menu

        fi

        # if choice exists, then run-it!
        if [[ "$choice" ]]; then

            key=$(array_search "${choice}" "${text_menu_name[@]}");

            if [[ -z "${key}" ]]; then unset choice; else "${choice}"; fi
            unset array key

            write_file "log" "### $FUNCNAME: choice: ${choice}"
        fi

    done

    [[ $? -ne 0 ]] && EXIT

}

function display_mssg() {

    # call: display_mssg option title texte

    if [[ "${ZENITY}" -ne 0 ]]; then

        case "$1" in
            i) zenity_info "$2" "$3" ;;
            n) zenity_notify "$2" "$3" ;;
            q) zenity_question "$2" "$3" ;;
        esac

    else

        case "$1" in
            q) echo -e "$2" "${text_yes_no}"; read ;;
            *) echo -e "$2" ;;
        esac

    fi

    write_file "log" "### Message: $2"

}

function echos_files() {

    write_file "log" "$now ### $FUNCNAME: Attempt ones echos to choose files..."

    i=1

    if [[ "${DIALOG}" -eq 1 ]]; then

        items=""
        for name in "${mtd_name[@]}"; do

            key=$(array_search "${mtd_name[$i]}" "${FILES[@]}")
            if [[ -n "$key" ]] ; then key="on"; else key="off"; fi

            items="${items} $i ${name} ${key}"

            let "i = $i + 1";
            unset key

        done

        files=$(dialog_list_files "${text_menu_files}" "${title_menu_files}" "${items}")

        display_detected "items: ${items}"
        unset items

    fi

    if [[ "${ZENITY}" -eq 1 ]]; then

        while [ $i -le $(count "${mtd_name[@]}") ]; do

            key=$(array_search "${mtd_name[$i]}" "${FILES[@]}");
            if [[ -n "${key}" ]]; then echo TRUE; else echo FALSE; fi

            echo "${mtd_name[$i]}"
            echo "${mtd_size[$i]}"
            echo "${mtd_addr[$i]}"
            echo "${mtd_map[$i]}"

            let "i = $i + 1";
            unset key

        done

    fi

    unset array i

}

function echos_menu() {

    write_file "log" "$now ### $FUNCNAME: Attempt ones echos to choose menu..."

    local IFS
    local list=""
    local -i i=1

    if [[ "${DIALOG}" -eq 1 ]]; then

        while [ $i -le $(count "${text_menu_name[@]}") ]; do

            list="${text_menu_name[$i]}|${text_menu_description[$i]}"
            echo "${list}" >> "${FILE_TMP}_menu.tmp"
            display_mssg "n" "${list}"

            let "i = $i + 1";
            unset list

        done

        while IFS="|"; shift; read col1 col2 || [ -n "${col1}" ]; do

            menu+=("${col1}" "${col2}")

        done < "${FILE_TMP}_menu.tmp"


        #while [ $i -le $(count "${text_menu_name[@]}") ]; do

            #menu+=("${text_menu_name[$i]}" "${text_menu_description[$i]}")
            ##echo "${list}"

            #let "i = $i + 1";
            ##unset list

        #done

        #echo "menu: ${menu[@]}"
        #EXIT
        #choice=$(dialog_menu "${text_welcome}" "${title_welcome}" "${#text_menu_name[@]}" "${menu[@]}")

        display_detected "menu: ${menu}"
        unset items

    else

        while [ $i -le $(count "${text_menu_name[@]}") ]; do
            echo "${text_menu_name[$i]}";
            echo "${text_menu_description[$i]}";
            let "i = $i + 1";
        done

    fi

	unset i IFS

}
