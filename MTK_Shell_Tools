#!/bin/bash
#set -x
clear
#######
###
### Made by Stephane HUC - <devs@stephane-huc.net>
###  alias ATP, ATP:MIUI, ATP:RedRice...
###
### thanks for explains :
#### http://www.chinaphonearena.com/forum/
###
### License: CC 0
###

EXEC=true
if ! ${EXEC}; then exit; fi

PWD="$(pwd)"
INC="${PWD}/inc"
DIR_LANG="${PWD}/lang" #&& echo $DIR_LANG
lang="${LANG:0:2}" #&& echo $LANG
#lang="en"
MTK_NB_PARAMS=$#
MTK_PARAMS=("$@")

# link texts and titles variables
if [[ -f "${DIR_LANG}/titles.${lang}" ]]; then source "${DIR_LANG}/titles.${lang}"; else source "${DIR_LANG}/titles.en"; fi
if [[ -f "${DIR_LANG}/texts.${lang}" ]]; then source "${DIR_LANG}/texts.${lang}"; else source "${DIR_LANG}/texts.en"; fi

# link files needed
source "${INC}/config"

# link functions needed
#source "${INC}/dialog"
#source "${INC}/zenity"
source "${INC}/display"
source "${INC}/ADB_functions"
source "${INC}/functions"

###
# MTK Functions
###

function MTK_General() {

    manage_fonts
    mssg=$(printf "${text_error_unknown_option}" "${MTK_PARAMS[0]}")
    display_error "${mssg}\n"
    press_any_key
    display_help
    press_any_key
    exit 1

}

function MTK_Flasher() {

    control_system
    detect_args "FLASH" "${MTK_PARAMS[1]}"
    FLASH "${MTK_PARAMS[1]}"

}

# Launcher
function MTK_Launcher() {

    if [[ ${MTK_NB_PARAMS} -eq 0 ]]; then

        MTKZenyTux

    else

        case "${MTK_PARAMS[0]}" in

            -f|-F|-flash)
                MTK_Flasher
            ;;

            -h|-H|-\?|-help)
                display_help
            ;;

            -R|-reboot)
                adb_reboot_system
            ;;

            -RR|-reboot_recovery)
                adb_reboot_recovery
            ;;

            -root)
                MTK_Rooter
            ;;

            -s|-S|-save)
                MTK_Saver
            ;;

            -unroot)
                MTK_Unrooter
            ;;

            *)
                MTK_General
            ;;

        esac

    fi

}

function MTK_Rooter() {

    control_system
    ROOT

}

function MTK_Saver() {

    control_system
    detect_args "BACKUP" "${MTK_PARAMS[1]}"
    BACKUP "${MTK_PARAMS[1]}"

}

function MTK_Unrooter() {

    control_system
    UNROOT

}

MTK_Launcher
